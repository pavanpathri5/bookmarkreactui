{"ast":null,"code":"var _jsxFileName = \"/Users/pavankumarpathri/Documents/automation/bookmarkreactui/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { Component, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { MDBDataTable } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.getPosts = async () => {\n      const url = \"http://localhost:8050/api/v1/getallbookmarks?page=1&pageSize=3\";\n      const obj = {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      await fetch(`${url}`, obj).then(response => response.json()).then(responseJson => {\n        console.warn(responseJson);\n        this.setState({\n          data: responseJson\n        });\n      }).catch(error => {\n        console.warn(error);\n      });\n    };\n    this.showData = () => {\n      const {\n        postsPerPage,\n        currentPage,\n        data\n      } = this.state;\n      const indexOfLastPage = currentPage * postsPerPage;\n      const indexOfFirstPage = indexOfLastPage - postsPerPage;\n      const currentPosts = data.slice(indexOfFirstPage, indexOfLastPage);\n      try {\n        return currentPosts.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: postsPerPage * (currentPage - 1) + index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.link\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.tag.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 8\n          }, this);\n        });\n      } catch (e) {\n        alert(e.message);\n      }\n    };\n    this.showPagination = () => {\n      const {\n        postsPerPage,\n        data\n      } = this.state;\n      const pageNumbers = [];\n      const totalPosts = data.length;\n      for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n        pageNumbers.push(i);\n      }\n      const pagination = pageNumbers => {\n        this.setState({\n          currentPage: pageNumbers\n        });\n      };\n      return /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination\",\n          children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: this.state.currentPage === number ? 'page-item active' : 'page-item',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => pagination(number),\n              className: \"page-link\",\n              children: [\" \", number, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 7\n            }, this)\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this);\n    };\n    this.showPagination1 = () => {\n      const {\n        postsPerPage,\n        totalPosts,\n        paginate\n      } = this.data;\n      const {\n        pcurrentPage,\n        setCurrentPage\n      } = this.state;\n      console.log(totalPosts);\n      const PageNumbers = [];\n      const int = Math.ceil(totalPosts / postsPerPage);\n      if (int === 1) return null;\n      for (let i = 1; i <= int; i++) {\n        PageNumbers.push(i);\n      }\n    };\n    this.state = {\n      data: [],\n      postsPerPage: 10,\n      currentPage: 1\n    };\n  }\n  componentDidMount() {\n    this.getPosts();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table align-items-center justify-content-center mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Link / Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"tagName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }, this), this.showData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: 'right'\n        },\n        children: this.showPagination()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PaginatedTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["logo","React","Component","useState","MDBDataTable","jsxDEV","_jsxDEV","App","constructor","props","getPosts","url","obj","method","headers","Accept","fetch","then","response","json","responseJson","console","warn","setState","data","catch","error","showData","postsPerPage","currentPage","state","indexOfLastPage","indexOfFirstPage","currentPosts","slice","map","item","index","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","link","user","email","tag","e","alert","message","showPagination","pageNumbers","totalPosts","length","i","Math","ceil","push","pagination","className","number","onClick","showPagination1","paginate","pcurrentPage","setCurrentPage","log","PageNumbers","int","componentDidMount","render","style","float","PaginatedTable"],"sources":["/Users/pavankumarpathri/Documents/automation/bookmarkreactui/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { Component, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { MDBDataTable } from 'mdbreact';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: [],\n      postsPerPage: 10,\n      currentPage: 1\n    }\n  }\n\n  getPosts = async () => {\n    const url = \"http://localhost:8050/api/v1/getallbookmarks?page=1&pageSize=3\";\n    const obj = {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }\n\n    await fetch(`${url}`, obj)\n    .then((response) => response.json())\n    .then((responseJson) => {\n      console.warn(responseJson);\n      this.setState({ data: responseJson })\n    })\n    .catch((error) => {\n      console.warn(error);\n    })\n  }\n  showData = () => {\n\n    const { postsPerPage, currentPage, data } = this.state;\n    const indexOfLastPage = currentPage * postsPerPage;\n    const indexOfFirstPage = indexOfLastPage - postsPerPage;\n    const currentPosts = data.slice(indexOfFirstPage, indexOfLastPage)\n\n   try{\n   return currentPosts.map((item, index) => {\n     return(\n       <tbody>\n       <tr>\n       <td>{postsPerPage * (currentPage-1)+index+1}</td>\n       <td>{item.name}</td>\n       <td>{item.description}</td>\n       <td>{item.link}</td>\n       <td>{item.user.email}</td>\n       <td>{item.tag.name}</td>\n       </tr>\n       </tbody>\n     )\n   })\n }catch(e){\n   alert(e.message)\n }\n }\n\n showPagination = () => {\n  const { postsPerPage, data } = this.state;\n  const pageNumbers = [];\n  const totalPosts = data.length;\n\n  for(let i = 1; i<=Math.ceil(totalPosts/postsPerPage); i++){\n    pageNumbers.push(i)\n  }\n\n  const pagination = (pageNumbers) => {\n    this.setState({currentPage: pageNumbers})\n  }\n\n  return(\n    <nav>\n    <ul className=\"pagination\">\n    {pageNumbers.map(number => (\n      <li key={number} className={this.state.currentPage === number ? 'page-item active' : 'page-item' }>\n      <button onClick={()=> pagination(number)} className=\"page-link\"> {number} </button>\n      </li>\n    ))}\n    </ul>\n    </nav>\n  )\n}\n\nshowPagination1 = () => {\n  const {postsPerPage, totalPosts, paginate} = this.data;\n  const {pcurrentPage, setCurrentPage} = this.state;\n\n  console.log(totalPosts)\n    const PageNumbers = []\n\n    const int = Math.ceil(totalPosts / postsPerPage)\n    if (int === 1 ) return null \n    for (let i = 1; i<= int; i++) {\n        PageNumbers.push(i) \n    }\n\n}\n\n\ncomponentDidMount(){\n  this.getPosts()\n}\n\nrender() {\n  return (\n    <div className=\"container\">\n    <table className=\"table align-items-center justify-content-center mb-0\">\n    <thead>\n    <tr>\n    <th>Name</th>\n    <th>Email</th>\n    <th>Description</th>\n    <th>Link / Details</th>\n    <th>User</th>\n    <th>tagName</th>\n    </tr>\n    </thead>\n    {this.showData()}\n    </table>\n\n    <div style={{ float: 'right' }}>\n    {this.showPagination()}\n    </div>\n    <PaginatedTable/>\n    </div>\n  );\n}\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}