{"ast":null,"code":"var _jsxFileName = \"/Users/pavankumarpathri/Documents/automation/bookmarkreactui/src/PaginatedTable.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './table.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PaginatedTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      // Store fetched data here\n      currentPage: 0,\n      itemsPerPage: 10 // Number of items to display per page\n    };\n    this.fetchData = () => {\n      axios.get(`http://localhost:8050/api/v1/getallbookmarks?page=${this.state.currentPage}&pageSize=${this.stateitemsPerPage}`).then(response => {\n        this.setState({\n          data: response.data\n        });\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    };\n    this.handlePageClick = selectedPage => {\n      this.setState({\n        currentPage: selectedPage.selected\n      });\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  componentDidMount() {\n    fetch(`http://localhost:8050/api/v1/getallbookmarks?page=${this.state.currentPage}&pageSize=${this.stateitemsPerPage}`) // Replace with your API endpoint\n    .then(response => response.json()).then(data => this.setState({\n      data\n    }));\n  }\n  render() {\n    // Pagination logic (skip in this example)\n    const {\n      data,\n      currentPage,\n      itemsPerPage\n    } = this.state;\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentData = data.slice(startIndex, endIndex);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"S.no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Link / Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"tagName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.tag.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-container\",\n        children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          pageCount: Math.ceil(data.length / itemsPerPage),\n          pageRangeDisplayed: 5,\n          marginPagesDisplayed: 2,\n          onPageChange: this.handlePageClick,\n          containerClassName: \"pagination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default PaginatedTable;","map":{"version":3,"names":["React","Component","axios","ReactPaginate","jsxDEV","_jsxDEV","PaginatedTable","constructor","args","state","data","currentPage","itemsPerPage","fetchData","get","stateitemsPerPage","then","response","setState","catch","error","console","handlePageClick","selectedPage","selected","componentDidMount","fetch","json","render","startIndex","endIndex","currentData","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","name","description","link","user","email","tag","className","pageCount","Math","ceil","length","pageRangeDisplayed","marginPagesDisplayed","onPageChange","containerClassName"],"sources":["/Users/pavankumarpathri/Documents/automation/bookmarkreactui/src/PaginatedTable.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './table.css'; // Import the CSS file\n\n\nclass PaginatedTable extends Component {\n  state = {\n    data: [], // Store fetched data here\n    currentPage: 0,\n    itemsPerPage: 10, // Number of items to display per page\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    axios.get(`http://localhost:8050/api/v1/getallbookmarks?page=${this.state.currentPage}&pageSize=${this.stateitemsPerPage}`)\n      .then((response) => {\n        this.setState({\n          data: response.data,\n        });\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  };\n\n  handlePageClick = (selectedPage) => {\n    this.setState({\n      currentPage: selectedPage.selected,\n    });\n  };\n\n\n\n  componentDidMount() {\n    fetch(`http://localhost:8050/api/v1/getallbookmarks?page=${this.state.currentPage}&pageSize=${this.stateitemsPerPage}`) // Replace with your API endpoint\n      .then((response) => response.json())\n      .then((data) => this.setState({ data }));\n  }\n\n  render() {\n    // Pagination logic (skip in this example)\n    const { data, currentPage, itemsPerPage } = this.state;\n\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentData = data.slice(startIndex, endIndex);\n\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n            <th>S.no</th>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Description</th>\n            <th>Link / Details</th>\n            <th>User</th>\n            <th>tagName</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currentData.map((item, index) => (\n              <tr key={index}>\n                <td>{index}</td>\n                <td>{item.name}</td>\n                <td>{item.description}</td>\n                <td>{item.link}</td>\n                <td>{item.user.email}</td>\n                <td>{item.tag.name}</td>\n                {/* Add more table cells based on your data structure */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"pagination-container\">\n        <ReactPaginate\n          pageCount={Math.ceil(data.length / itemsPerPage)}\n          pageRangeDisplayed={5}\n          marginPagesDisplayed={2}\n          onPageChange={this.handlePageClick}\n          containerClassName=\"pagination\"\n        />\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default PaginatedTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}