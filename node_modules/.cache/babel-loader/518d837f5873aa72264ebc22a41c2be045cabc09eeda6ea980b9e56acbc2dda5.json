{"ast":null,"code":"var _jsxFileName = \"/Users/pavankumarpathri/Documents/automation/bookmarkreactui/src/PaginatedTable.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './table.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PaginatedTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      // Store fetched data\n      currentPage: 0,\n      // Current page number\n      itemsPerPage: 2,\n      // Number of items to display per page\n      pageCount: 0\n    };\n    this.fetchData = () => {\n      const {\n        currentPage,\n        itemsPerPage\n      } = this.state;\n      const offset = currentPage * itemsPerPage;\n\n      // Replace 'your_api_endpoint' with your actual API endpoint\n      axios.get(`http://localhost:8050/api/v1/getallbookmarks?page=${offset}&pageSize=${itemsPerPage}`).then(response => {\n        console.warn(JSON.parse(response.data.length));\n        this.setState({\n          data: response.data,\n          pageCount: Math.ceil(13 / itemsPerPage) //Math.ceil(JSON.parse(response.data.length) / itemsPerPage), //  need data count\n        });\n      }).catch(error => {\n        console.error('Error fetching data:', error);\n      });\n    };\n    this.handlePageClick = selectedPage => {\n      this.setState({\n        currentPage: selectedPage.selected\n      }, () => this.fetchData());\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n  render() {\n    // Pagination logic (skip in this example)\n    const {\n      data,\n      currentPage,\n      itemsPerPage,\n      pageCount\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"S.no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Link / Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"tagName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data === null || data === void 0 ? void 0 : data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.link\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.tag.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-container\",\n        children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          pageCount: pageCount,\n          pageRangeDisplayed: 5,\n          marginPagesDisplayed: 2,\n          onPageChange: this.handlePageClick,\n          containerClassName: \"pagination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default PaginatedTable;","map":{"version":3,"names":["React","Component","axios","ReactPaginate","jsxDEV","_jsxDEV","PaginatedTable","constructor","args","state","data","currentPage","itemsPerPage","pageCount","fetchData","offset","get","then","response","console","warn","JSON","parse","length","setState","Math","ceil","catch","error","handlePageClick","selectedPage","selected","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","name","description","link","user","email","tag","pageRangeDisplayed","marginPagesDisplayed","onPageChange","containerClassName"],"sources":["/Users/pavankumarpathri/Documents/automation/bookmarkreactui/src/PaginatedTable.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './table.css'; // Import the CSS file\n\n\nclass PaginatedTable extends Component {\n  state = {\n    data: [],          // Store fetched data\n    currentPage: 0,    // Current page number\n    itemsPerPage: 2, // Number of items to display per page\n    pageCount: 0\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    const { currentPage, itemsPerPage } = this.state;\n    const offset = currentPage * itemsPerPage;\n\n    // Replace 'your_api_endpoint' with your actual API endpoint\n    axios.get(`http://localhost:8050/api/v1/getallbookmarks?page=${offset}&pageSize=${itemsPerPage}`)\n      .then((response) => {\n        console.warn(JSON.parse(response.data.length));\n        this.setState({\n          data: response.data,\n          pageCount: Math.ceil(13/itemsPerPage)//Math.ceil(JSON.parse(response.data.length) / itemsPerPage), //  need data count\n        });\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  };\n\n  handlePageClick = (selectedPage) => {\n    this.setState(\n      { currentPage: selectedPage.selected },\n      () => this.fetchData()\n    );\n  };\n\n  render() {\n    // Pagination logic (skip in this example)\n    const { data, currentPage, itemsPerPage, pageCount } = this.state;\n\n    return (\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n            <th>S.no</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Link / Details</th>\n            <th>User</th>\n            <th>tagName</th>\n            </tr>\n          </thead>\n          <tbody>\n          {data?.map((item, index) => (\n              <tr key={index}>\n                <td>{index}</td>\n                <td>{item.name}</td>\n                <td>{item.description}</td>\n                <td>{item.link}</td>\n                <td>{item.user.email}</td>\n                <td>{item.tag.name}</td>\n                {/* Add more table cells based on your data structure */}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"pagination-container\">\n          <ReactPaginate\n            pageCount={pageCount}\n            pageRangeDisplayed={5}\n            marginPagesDisplayed={2}\n            onPageChange={this.handlePageClick}\n            containerClassName=\"pagination\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PaginatedTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}